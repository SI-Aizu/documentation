{"config":{"lang":["ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Home \u00b6 \u7814\u7a76\u5ba4\u30e1\u30f3\u30d0\u30fc\u5411\u3051\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3002 \u74b0\u5883\u69cb\u7bc9 Deep Learning Framework, Python project management Git, GitHub \u306e\u4f7f\u3044\u65b9 VoTT \u306e\u4f7f\u3044\u65b9 Useful Links PyTorch TensorFlow \u95a2\u4fc2\u8005\u4ee5\u5916\u306e\u95b2\u89a7\u8005\u3078 \u00b6 \u3053\u306e\u30b5\u30a4\u30c8\u30fb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u3064\u3044\u3066 \u95b2\u89a7\u306f\u3054\u81ea\u7531\u306b\u3069\u3046\u305e MIT License \u306e\u3082\u3068\u3067\u5229\u7528\u3057\u3066\u3044\u305f\u3060\u3051\u307e\u3059\u304c\u3001\u30b5\u30dd\u30fc\u30c8\u3084\u4fdd\u8a3c\u306f\u4e00\u5207\u3057\u307e\u305b\u3093 Google Analytics \u7b49\u306e\u30a2\u30af\u30bb\u30b9\u89e3\u6790\u30c4\u30fc\u30eb\u306f\u8a2d\u7f6e\u3057\u3066\u3044\u307e\u305b\u3093 \u30b5\u30a4\u30c8\u306e\u30ed\u30fc\u30ab\u30eb\u30d7\u30ec\u30d3\u30e5\u30fc \u00b6 \u5229\u7528\u3067\u304d\u308b\u62e1\u5f35\u8a18\u6cd5\u3084\u30b5\u30a4\u30c8\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002 Material for MkDocs git clone https://github.com/SI-Aizu/documentation.git # OR git clone git@github.com:SI-Aizu/documentation.git # mkdocs serve docker-compose up http://localhost:8888 # \u7d42\u308f\u3063\u305f\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u7247\u4ed8\u3051\u308b docker-compose down","title":"Home"},{"location":"#home","text":"\u7814\u7a76\u5ba4\u30e1\u30f3\u30d0\u30fc\u5411\u3051\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3002 \u74b0\u5883\u69cb\u7bc9 Deep Learning Framework, Python project management Git, GitHub \u306e\u4f7f\u3044\u65b9 VoTT \u306e\u4f7f\u3044\u65b9 Useful Links PyTorch TensorFlow","title":"Home"},{"location":"#_1","text":"\u3053\u306e\u30b5\u30a4\u30c8\u30fb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u3064\u3044\u3066 \u95b2\u89a7\u306f\u3054\u81ea\u7531\u306b\u3069\u3046\u305e MIT License \u306e\u3082\u3068\u3067\u5229\u7528\u3057\u3066\u3044\u305f\u3060\u3051\u307e\u3059\u304c\u3001\u30b5\u30dd\u30fc\u30c8\u3084\u4fdd\u8a3c\u306f\u4e00\u5207\u3057\u307e\u305b\u3093 Google Analytics \u7b49\u306e\u30a2\u30af\u30bb\u30b9\u89e3\u6790\u30c4\u30fc\u30eb\u306f\u8a2d\u7f6e\u3057\u3066\u3044\u307e\u305b\u3093","title":"\u95a2\u4fc2\u8005\u4ee5\u5916\u306e\u95b2\u89a7\u8005\u3078"},{"location":"#_2","text":"\u5229\u7528\u3067\u304d\u308b\u62e1\u5f35\u8a18\u6cd5\u3084\u30b5\u30a4\u30c8\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002 Material for MkDocs git clone https://github.com/SI-Aizu/documentation.git # OR git clone git@github.com:SI-Aizu/documentation.git # mkdocs serve docker-compose up http://localhost:8888 # \u7d42\u308f\u3063\u305f\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u7247\u4ed8\u3051\u308b docker-compose down","title":"\u30b5\u30a4\u30c8\u306e\u30ed\u30fc\u30ab\u30eb\u30d7\u30ec\u30d3\u30e5\u30fc"},{"location":"Tutorial-VoTT/","text":"Tutorial VoTT \u00b6 SI-Aizu/vott-tutorial: Tutorial for VoTT (Visual Object Tagging Tool - Image and video annotation tool)","title":"Tutorial VoTT"},{"location":"Tutorial-VoTT/#tutorial_vott","text":"SI-Aizu/vott-tutorial: Tutorial for VoTT (Visual Object Tagging Tool - Image and video annotation tool)","title":"Tutorial VoTT"},{"location":"Useful-Links/","text":"Useful Links \u00b6 \u6559\u6750 \u00b6 yoyoyo-yo/Gasyori100knock: \u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af - Image Processing \u5165\u9580 yoyoyo-yo/DeepLearningMugenKnock: \u6df1\u5c64\u5b66\u7fd2\u7121\u9650\u30ce\u30c3\u30af - Deep Learning \u5165\u9580 \u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af - Natural Language Processing (NLP) \u5165\u9580 arXivTimes/arXivTimes - \u8ad6\u6587\u306e Abstract \u8981\u7d04\u3092\u96c6\u3081\u305f\u30ea\u30dd\u30b8\u30c8\u30ea Datasets \u00b6 Food-101 zalandoresearch/fashion-mnist - FMNIST \u8863\u670d\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 DataSets - arXivTimes/arXivTimes - \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4e00\u89a7 ObjectNet - ImageNet \u3088\u308a\u96e3\u6613\u5ea6\u306e\u9ad8\u3044\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 Logo \u30ed\u30b4 msn199959/Logo-2k-plus-Dataset: Logo-2k-plus-Dataset LLD - Large Logo Dataset WebLogo-2M Dataset QMUL-OpenLogo Flickr Logos dataset | IVA","title":"Useful Links"},{"location":"Useful-Links/#useful_links","text":"","title":"Useful Links"},{"location":"Useful-Links/#_1","text":"yoyoyo-yo/Gasyori100knock: \u753b\u50cf\u51e6\u7406100\u672c\u30ce\u30c3\u30af - Image Processing \u5165\u9580 yoyoyo-yo/DeepLearningMugenKnock: \u6df1\u5c64\u5b66\u7fd2\u7121\u9650\u30ce\u30c3\u30af - Deep Learning \u5165\u9580 \u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af - Natural Language Processing (NLP) \u5165\u9580 arXivTimes/arXivTimes - \u8ad6\u6587\u306e Abstract \u8981\u7d04\u3092\u96c6\u3081\u305f\u30ea\u30dd\u30b8\u30c8\u30ea","title":"\u6559\u6750"},{"location":"Useful-Links/#datasets","text":"Food-101 zalandoresearch/fashion-mnist - FMNIST \u8863\u670d\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 DataSets - arXivTimes/arXivTimes - \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4e00\u89a7 ObjectNet - ImageNet \u3088\u308a\u96e3\u6613\u5ea6\u306e\u9ad8\u3044\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 Logo \u30ed\u30b4 msn199959/Logo-2k-plus-Dataset: Logo-2k-plus-Dataset LLD - Large Logo Dataset WebLogo-2M Dataset QMUL-OpenLogo Flickr Logos dataset | IVA","title":"Datasets"},{"location":"Tutorial-PyTorch/","text":"Getting started \u00b6 Docker Compose \u00b6 # \u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9 docker-compose build # \u30b3\u30f3\u30c6\u30ca\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u8d77\u52d5 docker-compose up -d # \u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3 docker-compose exec dev bash # \u30b3\u30f3\u30c6\u30ca\u306e\u7d42\u4e86\u3068\u524a\u9664 docker-compose down Jupyter Lab \u00b6 # \u30b3\u30f3\u30c6\u30ca\u5185 cd ./tutorials/transfer_learning jupyter-lab --ip = 0 .0.0.0 --no-browser --allow-root","title":"Getting started"},{"location":"Tutorial-PyTorch/#getting_started","text":"","title":"Getting started"},{"location":"Tutorial-PyTorch/#docker_compose","text":"# \u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9 docker-compose build # \u30b3\u30f3\u30c6\u30ca\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u8d77\u52d5 docker-compose up -d # \u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3 docker-compose exec dev bash # \u30b3\u30f3\u30c6\u30ca\u306e\u7d42\u4e86\u3068\u524a\u9664 docker-compose down","title":"Docker Compose"},{"location":"Tutorial-PyTorch/#jupyter_lab","text":"# \u30b3\u30f3\u30c6\u30ca\u5185 cd ./tutorials/transfer_learning jupyter-lab --ip = 0 .0.0.0 --no-browser --allow-root","title":"Jupyter Lab"},{"location":"Tutorial-PyTorch/transfer_learning/","text":"\u8ee2\u79fb\u5b66\u7fd2 \u00b6 Transfer Learning for Computer Vision Tutorial \u2014 PyTorch Tutorials 1.3.1 documentation \u5b66\u7fd2\u6e08\u307f ResNet18 \u3092\u7528\u3044\u3066\u8ee2\u79fb\u5b66\u7fd2\u3092\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002 \u5168\u5c64\u3092\u518d\u5b66\u7fd2\u3059\u308b (Fine tuning \u3068\u547c\u3070\u308c\u308b) \u5168\u7d50\u5408\u5c64\u306e\u307f\u3092\u518d\u5b66\u7fd2\u3059\u308b (\u3053\u3063\u3061\u3092\u6307\u3057\u3066\u8ee2\u79fb\u5b66\u7fd2\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308b) Download dataset \u00b6 bash ./download_hymenoptera_data.sh Jupyter Lab \u00b6 notebook.ipynb \u3092 Jupyter Lab \u3067\u958b\u304f\u3002 Command line \u00b6 TBW.","title":"\u8ee2\u79fb\u5b66\u7fd2"},{"location":"Tutorial-PyTorch/transfer_learning/#_1","text":"Transfer Learning for Computer Vision Tutorial \u2014 PyTorch Tutorials 1.3.1 documentation \u5b66\u7fd2\u6e08\u307f ResNet18 \u3092\u7528\u3044\u3066\u8ee2\u79fb\u5b66\u7fd2\u3092\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3002 \u5168\u5c64\u3092\u518d\u5b66\u7fd2\u3059\u308b (Fine tuning \u3068\u547c\u3070\u308c\u308b) \u5168\u7d50\u5408\u5c64\u306e\u307f\u3092\u518d\u5b66\u7fd2\u3059\u308b (\u3053\u3063\u3061\u3092\u6307\u3057\u3066\u8ee2\u79fb\u5b66\u7fd2\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308b)","title":"\u8ee2\u79fb\u5b66\u7fd2"},{"location":"Tutorial-PyTorch/transfer_learning/#download_dataset","text":"bash ./download_hymenoptera_data.sh","title":"Download dataset"},{"location":"Tutorial-PyTorch/transfer_learning/#jupyter_lab","text":"notebook.ipynb \u3092 Jupyter Lab \u3067\u958b\u304f\u3002","title":"Jupyter Lab"},{"location":"Tutorial-PyTorch/transfer_learning/#command_line","text":"TBW.","title":"Command line"},{"location":"Tutorial-YOLO-Darknet/","text":"Darknet YOLO v3 and v4 \u00b6 v4 Paper: [2004.10934] YOLOv4: Optimal Speed and Accuracy of Object Detection Repository: AlexeyAB/darknet: YOLOv4 - Neural Networks for Object Detection (Windows and Linux version of Darknet ) Google Colab: YOLOv4_Tutorial.ipynb - Colaboratory Build Docker Image \u00b6 Edit Makefile \u00b6 \u5229\u7528\u3059\u308b GPU \u3054\u3068\u306b Makefile \u3092\u7de8\u96c6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 GeForce RTX 2080 Ti \u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8) # GeForce RTX 2080 Ti, RTX 2080, RTX 2070, Quadro RTX 8000, Quadro RTX 6000, Quadro RTX 5000, Tesla T4, XNOR Tensor Cores ARCH = -gencode arch = compute_75,code =[ sm_75,compute_75 ] # GTX 1080, GTX 1070, GTX 1060, GTX 1050, GTX 1030, Titan Xp, Tesla P40, Tesla P4 # ARCH= -gencode arch=compute_61,code=sm_61 -gencode arch=compute_61,code=compute_61 GTX 1080 \u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002 # GeForce RTX 2080 Ti, RTX 2080, RTX 2070, Quadro RTX 8000, Quadro RTX 6000, Quadro RTX 5000, Tesla T4, XNOR Tensor Cores # ARCH= -gencode arch=compute_75,code=[sm_75,compute_75] # GTX 1080, GTX 1070, GTX 1060, GTX 1050, GTX 1030, Titan Xp, Tesla P40, Tesla P4 ARCH = -gencode arch = compute_61,code = sm_61 -gencode arch = compute_61,code = compute_61 Build \u00b6 $ nvidia-smi NVIDIA-SMI 440.82 Driver Version: 440.82 CUDA Version: 10.2 nvidia-smi \u3067\u78ba\u8a8d\u3067\u304d\u308b CUDA Version \u3068 Base Docker image nvidia/cuda \u306e tag \u3092\u4e00\u81f4\u3055\u305b\u308b\u3002 sudo docker build . -t darknet-yolo:latest --build-arg BASE_IMAGE = \"nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\" Run Container \u00b6 sudo docker run --rm -i -t --gpus all darknet-yolo:latest bash Predict \u00b6 \u63a8\u8ad6\u306e\u5b9f\u884c\u4f8b\u3092\u4ee5\u4e0b\u306b\u793a\u3059\u3002 $ ./darknet detector test cfg/coco.data cfg/yolov3.cfg yolov3.weights data/dog.jpg ... data/dog.jpg: Predicted in 12.776000 milli-seconds. bicycle: 99% dog: 100% truck: 94% ... $ ./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/dog.jpg ... data/dog.jpg: Predicted in 24.482000 milli-seconds. bicycle: 92% dog: 98% truck: 92% pottedplant: 33% ... $ python3 darknet.py ... Total BFLOPS 128.459 avg_outputs = 1068395 Allocate additional workspace_size = 52.43 MB Try to load weights: yolov4.weights Loading weights from yolov4.weights... seen 64, trained: 32032 K-images (500 Kilo-batches_64) Done! Loaded 162 layers from weights-file Loaded - names_list: data/coco.names, classes = 80 Unable to show image: No module named 'skimage' [('dog', 0.9787506461143494, (220.98822021484375, 383.2079772949219, 184.41787719726562, 316.5090637207031)), ('bicycle', 0.921798586845398, (343.4819641113281, 276.87603759765625, 458.0648193359375, 298.7120361328125)), ('truck', 0.91830974817276, (574.2606201171875, 123.24830627441406, 220.67361450195312, 93.20550537109375)), ('pottedplant', 0.33072134852409363, (699.3265380859375, 131.88845825195312, 36.533931732177734, 45.44673538208008))] v3 v4","title":"Darknet YOLO v3 and v4"},{"location":"Tutorial-YOLO-Darknet/#darknet_yolo_v3_and_v4","text":"v4 Paper: [2004.10934] YOLOv4: Optimal Speed and Accuracy of Object Detection Repository: AlexeyAB/darknet: YOLOv4 - Neural Networks for Object Detection (Windows and Linux version of Darknet ) Google Colab: YOLOv4_Tutorial.ipynb - Colaboratory","title":"Darknet YOLO v3 and v4"},{"location":"Tutorial-YOLO-Darknet/#build_docker_image","text":"","title":"Build Docker Image"},{"location":"Tutorial-YOLO-Darknet/#edit_makefile","text":"\u5229\u7528\u3059\u308b GPU \u3054\u3068\u306b Makefile \u3092\u7de8\u96c6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 GeForce RTX 2080 Ti \u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8) # GeForce RTX 2080 Ti, RTX 2080, RTX 2070, Quadro RTX 8000, Quadro RTX 6000, Quadro RTX 5000, Tesla T4, XNOR Tensor Cores ARCH = -gencode arch = compute_75,code =[ sm_75,compute_75 ] # GTX 1080, GTX 1070, GTX 1060, GTX 1050, GTX 1030, Titan Xp, Tesla P40, Tesla P4 # ARCH= -gencode arch=compute_61,code=sm_61 -gencode arch=compute_61,code=compute_61 GTX 1080 \u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002 # GeForce RTX 2080 Ti, RTX 2080, RTX 2070, Quadro RTX 8000, Quadro RTX 6000, Quadro RTX 5000, Tesla T4, XNOR Tensor Cores # ARCH= -gencode arch=compute_75,code=[sm_75,compute_75] # GTX 1080, GTX 1070, GTX 1060, GTX 1050, GTX 1030, Titan Xp, Tesla P40, Tesla P4 ARCH = -gencode arch = compute_61,code = sm_61 -gencode arch = compute_61,code = compute_61","title":"Edit Makefile"},{"location":"Tutorial-YOLO-Darknet/#build","text":"$ nvidia-smi NVIDIA-SMI 440.82 Driver Version: 440.82 CUDA Version: 10.2 nvidia-smi \u3067\u78ba\u8a8d\u3067\u304d\u308b CUDA Version \u3068 Base Docker image nvidia/cuda \u306e tag \u3092\u4e00\u81f4\u3055\u305b\u308b\u3002 sudo docker build . -t darknet-yolo:latest --build-arg BASE_IMAGE = \"nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\"","title":"Build"},{"location":"Tutorial-YOLO-Darknet/#run_container","text":"sudo docker run --rm -i -t --gpus all darknet-yolo:latest bash","title":"Run Container"},{"location":"Tutorial-YOLO-Darknet/#predict","text":"\u63a8\u8ad6\u306e\u5b9f\u884c\u4f8b\u3092\u4ee5\u4e0b\u306b\u793a\u3059\u3002 $ ./darknet detector test cfg/coco.data cfg/yolov3.cfg yolov3.weights data/dog.jpg ... data/dog.jpg: Predicted in 12.776000 milli-seconds. bicycle: 99% dog: 100% truck: 94% ... $ ./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/dog.jpg ... data/dog.jpg: Predicted in 24.482000 milli-seconds. bicycle: 92% dog: 98% truck: 92% pottedplant: 33% ... $ python3 darknet.py ... Total BFLOPS 128.459 avg_outputs = 1068395 Allocate additional workspace_size = 52.43 MB Try to load weights: yolov4.weights Loading weights from yolov4.weights... seen 64, trained: 32032 K-images (500 Kilo-batches_64) Done! Loaded 162 layers from weights-file Loaded - names_list: data/coco.names, classes = 80 Unable to show image: No module named 'skimage' [('dog', 0.9787506461143494, (220.98822021484375, 383.2079772949219, 184.41787719726562, 316.5090637207031)), ('bicycle', 0.921798586845398, (343.4819641113281, 276.87603759765625, 458.0648193359375, 298.7120361328125)), ('truck', 0.91830974817276, (574.2606201171875, 123.24830627441406, 220.67361450195312, 93.20550537109375)), ('pottedplant', 0.33072134852409363, (699.3265380859375, 131.88845825195312, 36.533931732177734, 45.44673538208008))] v3 v4","title":"Predict"},{"location":"setup/","text":"\u74b0\u5883\u69cb\u7bc9 \u00b6 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \u00b6 Ubuntu 18.04 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Docker, Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u305d\u306e\u4ed6 \u00b6 NVIDIA Driver \u306e\u66f4\u65b0","title":"\u74b0\u5883\u69cb\u7bc9"},{"location":"setup/#_1","text":"","title":"\u74b0\u5883\u69cb\u7bc9"},{"location":"setup/#_2","text":"Ubuntu 18.04 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb Docker, Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","title":"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"setup/#_3","text":"NVIDIA Driver \u306e\u66f4\u65b0","title":"\u305d\u306e\u4ed6"},{"location":"setup/1-ubuntu/","text":"1. Ubuntu \u00b6 Create Boot USB Disk \u00b6 balenaEtcher - Flash OS images to SD cards & USB drives balenaEtcher \u304c\u4fbf\u5229\u3002","title":"1. Ubuntu"},{"location":"setup/1-ubuntu/#1_ubuntu","text":"","title":"1. Ubuntu"},{"location":"setup/1-ubuntu/#create_boot_usb_disk","text":"balenaEtcher - Flash OS images to SD cards & USB drives balenaEtcher \u304c\u4fbf\u5229\u3002","title":"Create Boot USB Disk"},{"location":"setup/2-docker/","text":"2. Docker \u00b6 Installation \u00b6 which docker \u3084 which docker-compose \u306a\u3069\u3067\u78ba\u8a8d\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 macOS \u306e\u5834\u5408 Docker for Mac \u306f docker-compose \u3082\u542b\u3093\u3067\u3044\u308b\u3002 macOS \u00b6 Install Docker Desktop on Mac | Docker Documentation Ubuntu 18.04 \u00b6 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066 Docker \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 Install Docker Engine on Ubuntu | Docker Documentation \u7d9a\u3044\u3066 Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 Install Docker Compose | Docker Documentation compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5229\u7528\u3059\u308b\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt install -y curl jq \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067 compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u3067\u304d\u308b\u3002 export DOCKER_COMPOSE_VERSION = $( curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.tag_name' ) sudo curl -L \"https://github.com/docker/compose/releases/download/ ${ DOCKER_COMPOSE_VERSION } /docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose && \\ sudo chmod +x /usr/local/bin/docker-compose && \\ docker-compose --version Ubuntu 18.04 Rootless \u00b6 Rootless Docker \u306f\u30aa\u30b9\u30b9\u30e1\u3002 Docker 19.03\u65b0\u6a5f\u80fd (root\u6a29\u9650\u4e0d\u8981\u5316\u3001GPU\u5bfe\u5fdc\u5f37\u5316\u3001CLI\u30d7\u30e9\u30b0\u30a4\u30f3) - nttlabs - Medium cd ~ sudo apt update sudo apt upgrade -y sudo apt install -y curl uidmap curl -fsSL https://get.docker.com/rootless | sh \u4ee5\u4e0b\u3092 ~/.bashrc \u306b\u8ffd\u8a18\u3059\u308b\u3002 # Rootless Docker export PATH = \" ${ HOME } /bin: ${ PATH } \" export DOCKER_HOST = \"unix:///run/user/1000/docker.sock\" # ~/.bashrc \u3078\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b Bash \u3092\u518d\u8d77\u52d5 exec bash # Docker daemon \u3092\u8d77\u52d5 systemctl --user start docker # Docker \u306e\u52d5\u4f5c\u78ba\u8a8d docker run --rm -it hello-world","title":"2. Docker"},{"location":"setup/2-docker/#2_docker","text":"","title":"2. Docker"},{"location":"setup/2-docker/#installation","text":"which docker \u3084 which docker-compose \u306a\u3069\u3067\u78ba\u8a8d\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 macOS \u306e\u5834\u5408 Docker for Mac \u306f docker-compose \u3082\u542b\u3093\u3067\u3044\u308b\u3002","title":"Installation"},{"location":"setup/2-docker/#macos","text":"Install Docker Desktop on Mac | Docker Documentation","title":"macOS"},{"location":"setup/2-docker/#ubuntu_1804","text":"\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5f93\u3063\u3066 Docker \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 Install Docker Engine on Ubuntu | Docker Documentation \u7d9a\u3044\u3066 Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 Install Docker Compose | Docker Documentation compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5229\u7528\u3059\u308b\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt install -y curl jq \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067 compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u304c\u3067\u304d\u308b\u3002 export DOCKER_COMPOSE_VERSION = $( curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.tag_name' ) sudo curl -L \"https://github.com/docker/compose/releases/download/ ${ DOCKER_COMPOSE_VERSION } /docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose && \\ sudo chmod +x /usr/local/bin/docker-compose && \\ docker-compose --version","title":"Ubuntu 18.04"},{"location":"setup/2-docker/#ubuntu_1804_rootless","text":"Rootless Docker \u306f\u30aa\u30b9\u30b9\u30e1\u3002 Docker 19.03\u65b0\u6a5f\u80fd (root\u6a29\u9650\u4e0d\u8981\u5316\u3001GPU\u5bfe\u5fdc\u5f37\u5316\u3001CLI\u30d7\u30e9\u30b0\u30a4\u30f3) - nttlabs - Medium cd ~ sudo apt update sudo apt upgrade -y sudo apt install -y curl uidmap curl -fsSL https://get.docker.com/rootless | sh \u4ee5\u4e0b\u3092 ~/.bashrc \u306b\u8ffd\u8a18\u3059\u308b\u3002 # Rootless Docker export PATH = \" ${ HOME } /bin: ${ PATH } \" export DOCKER_HOST = \"unix:///run/user/1000/docker.sock\" # ~/.bashrc \u3078\u306e\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u305f\u3081\u306b Bash \u3092\u518d\u8d77\u52d5 exec bash # Docker daemon \u3092\u8d77\u52d5 systemctl --user start docker # Docker \u306e\u52d5\u4f5c\u78ba\u8a8d docker run --rm -it hello-world","title":"Ubuntu 18.04 Rootless"},{"location":"setup/upgrade-nvidia-driver/","text":"NVIDIA Driver \u306e\u66f4\u65b0 \u00b6 To Docker user Docker container \u304b\u3089 GPU \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f CUDA \u3084 cuDNN \u3092\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3001 CUDA \u306e\u90e8\u5206\u306f\u95a2\u4fc2\u306a\u3044\u3002 \u53e4\u3044\u30c9\u30e9\u30a4\u30d0\u30fc\u3068 cuda \u3092\u524a\u9664 \u00b6 sudo apt-get --purge remove nvidia-* sudo apt-get --purge remove cuda-* dpkg -l | grep nvidia dpkg -l | grep cuda \u3067\u6b8b\u308a\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3002 \u65b0\u3057\u3044\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u00b6 \u3053\u306e\u3068\u304d ctrl-c \u306a\u3069\u3067\u4f5c\u696d\u3092\u4e2d\u65ad\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u308b\u3053\u3068\u3002 sudo add-apt-repository ppa:graphics-drivers/ppa \u30d1\u30c3\u30b1\u30fc\u30b8\u4e00\u89a7\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u5f8c\u306b\u3001\u63a8\u5968\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo apt-get update ubuntu-drivers devices \u3092\u5b9f\u884c\u3059\u308b\u3068 driver : nvidia - 415 - thrid - party free driver : nvidia - 430 - thrid - party free recommended \u306a\u3069(\u4e00\u90e8\u7701\u7565)\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001\u63a8\u5968 (recommended) \u3055\u308c\u305f\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt-get install -y nvidia-430 \u518d\u8d77\u52d5\u3057\u305f\u5f8c\u306b GPU \u304c\u8a8d\u8b58\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002 sudo reboot nvidia-smi \u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u52dd\u3061\u3002","title":"NVIDIA Driver \u306e\u66f4\u65b0"},{"location":"setup/upgrade-nvidia-driver/#nvidia_driver","text":"To Docker user Docker container \u304b\u3089 GPU \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f CUDA \u3084 cuDNN \u3092\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3001 CUDA \u306e\u90e8\u5206\u306f\u95a2\u4fc2\u306a\u3044\u3002","title":"NVIDIA Driver \u306e\u66f4\u65b0"},{"location":"setup/upgrade-nvidia-driver/#cuda","text":"sudo apt-get --purge remove nvidia-* sudo apt-get --purge remove cuda-* dpkg -l | grep nvidia dpkg -l | grep cuda \u3067\u6b8b\u308a\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3002","title":"\u53e4\u3044\u30c9\u30e9\u30a4\u30d0\u30fc\u3068 cuda \u3092\u524a\u9664"},{"location":"setup/upgrade-nvidia-driver/#_1","text":"\u3053\u306e\u3068\u304d ctrl-c \u306a\u3069\u3067\u4f5c\u696d\u3092\u4e2d\u65ad\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u308b\u3053\u3068\u3002 sudo add-apt-repository ppa:graphics-drivers/ppa \u30d1\u30c3\u30b1\u30fc\u30b8\u4e00\u89a7\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u5f8c\u306b\u3001\u63a8\u5968\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u78ba\u8a8d\u3059\u308b\u3002 sudo apt-get update ubuntu-drivers devices \u3092\u5b9f\u884c\u3059\u308b\u3068 driver : nvidia - 415 - thrid - party free driver : nvidia - 430 - thrid - party free recommended \u306a\u3069(\u4e00\u90e8\u7701\u7565)\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001\u63a8\u5968 (recommended) \u3055\u308c\u305f\u30c9\u30e9\u30a4\u30d0\u30fc\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 sudo apt-get install -y nvidia-430 \u518d\u8d77\u52d5\u3057\u305f\u5f8c\u306b GPU \u304c\u8a8d\u8b58\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002 sudo reboot nvidia-smi \u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u52dd\u3061\u3002","title":"\u65b0\u3057\u3044\u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"}]}